name: Nightly Benchmarks (Matrix)

on:
  schedule:
    - cron: "0 1 * * *"     # nightly tiny
    - cron: "0 2 * * 0"     # weekly medium (Sundays)
    - cron: "0 3 1 * *"     # monthly full (1st of month)
  workflow_dispatch:
    inputs:
      tier:
        description: "Tier to run (tiny|medium|full)"
        required: true
        default: "tiny"

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      groups: ${{ steps.set-matrix.outputs.groups }}
      total: ${{ steps.set-matrix.outputs.total }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          TOTAL=1   # adjust parallelism
          GRPS="[$(seq 0 $((TOTAL-1)) | paste -sd,)]"
          echo "groups=$GRPS" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT

  benchmark:
    runs-on: ubuntu-latest
    needs: discover
    strategy:
      fail-fast: false
      matrix:
        group_index: ${{ fromJson(needs.discover.outputs.groups) }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python deps
        run: pip install .

      - name: Run batch
        env:
          GROUP_INDEX: ${{ matrix.group_index }}
          GROUP_TOTAL: ${{ needs.discover.outputs.total }}
          # decide tier from schedule vs manual
          TIER: ${{ github.event_name == 'workflow_dispatch' && inputs.tier || (github.event.schedule == '0 1 * * *' && 'tiny' || github.event.schedule == '0 2 * * 0' && 'medium' || 'full') }}

        run: |
          python scripts/run_bench_batch_docker.py

      - name: Upload batch artifact
        uses: actions/upload-artifact@v4
        with:
          name: history-batch-${{ matrix.group_index }}
          path: benchmarks/history

  collect:
    runs-on: ubuntu-latest
    needs: benchmark
    permissions:
      contents: write    # allow pushing to main
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: _artifacts

      - name: Merge history from all batches
        run: |
          mkdir -p benchmarks/history
          # overlay all history/* files; since each job only writes its datasets, overwrites are unlikely
          find _artifacts -type f -path "*/history/*.json" -print0 | while IFS= read -r -d '' f; do
            ds=$(basename "$f")
            cp "$f" "benchmarks/history/$ds"
          done

      - name: Build dashboard
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: pip install .
      - run: |
        # list files benchmarks/history
        ls -l benchmarks/history
        find benchmarks/history -type f -path "*.json" | xargs -n1 head -n3

      - run: python scripts/make_dashboard.py


      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

      - name: Commit benchmark history
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add benchmarks/history
          if ! git diff --cached --quiet; then
            git commit -m "Update benchmark history ($(date -u +'%Y-%m-%d %H:%M:%S'))"
            git push origin main
          else
            echo "No changes to commit."
          fi